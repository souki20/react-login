{"version":3,"sources":["firebase.js","components/SignUp.js","components/Home.js","components/Login.js","context/AuthContext.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_FIREBASE_SENDER_ID","measurementId","firebase","initializeApp","provider","auth","GoogleAuthProvider","SignUp","history","useHistory","useState","error","setError","handleSubmit","event","a","preventDefault","target","elements","email","password","createUserWithEmailAndPassword","value","push","message","className","onSubmit","name","type","placeholder","to","Home","onClick","signOut","Login","signInWithEmailAndPassword","console","log","handleLogin","signInWithPopup","AuthContext","createContext","useAuthContext","useContext","AuthProvider","children","user","setUser","useEffect","unsubscribed","onAuthStateChanged","Provider","PrivateRoute","Component","component","rest","render","routeProps","PublicRoute","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb6d502c.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\n// 環境変数\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGE_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();","import { auth  } from \"../firebase\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst SignUp = () => {\n  const history = useHistory();\n  const [error, setError] = useState('');\n  const handleSubmit = async (event) => {\n    // submitイベントのキャンセル\n    event.preventDefault();\n    const { email, password } = event.target.elements;\n    try {\n      await auth.createUserWithEmailAndPassword(email.value, password.value);\n      history.push('/');\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>ユーザー登録</h1>\n      {error && <p className='error'>{error}</p>}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>メールアドレス</label>\n          <input name=\"email\" type=\"email\" placeholder=\"email\" />\n        </div>\n        <div>\n          <label>パスワード</label>\n          <input name=\"password\" type=\"password\" placeholder=\"password\"/>\n        </div>\n        <div>\n          <button>登録</button>\n        </div>\n        <div>\n          ユーザー登録済の場合は<Link to={'/login'}>こちら</Link>から\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;","import { auth } from \"../firebase\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Home = () => {\n  const history = useHistory();\n  const handleLogout = () => {\n    auth.signOut();\n    history.push('/login');\n  };\n  return (\n    <div>\n      <h1>ホームページ</h1>\n      <button onClick={handleLogout}>ログアウト</button>\n    </div>\n  );\n};\n\nexport default Home;","import '../App.css'\nimport { auth, provider } from \"../firebase\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst Login = () => {\n  const history = useHistory();\n  const [ error, setError ] = useState('');\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const { email, password } = event.target.elements;\n    try {\n      await auth.signInWithEmailAndPassword(email.value, password.value);\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n      setError(error.message);\n    }\n  };\n  const handleLogin = async (event) => {\n    try {\n      await auth.signInWithPopup(provider);\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>ログイン画面</h1>\n      {error && <p className='error'>{error}</p>}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>メールアドレス</label>\n          <input name=\"email\" type=\"email\" placeholder=\"email\" />\n        </div>\n        <div>\n          <label>パスワード</label>\n          <input name=\"password\" type=\"password\" placeholder=\"password\" />\n        </div>\n        <div>\n          <button>ログイン</button>\n          <button onClick={handleLogin}>Google ログイン</button>\n        </div>\n        <div>\n          ユーザー登録は<Link to={'/signup'}>こちら</Link>から\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;","import { createContext, useState, useContext, useEffect } from \"react\";\nimport { auth  } from \"../firebase\";\n// import firebase from 'firebase/compat/app';\n// import 'firebase/compat/auth';\n\n\nconst AuthContext = createContext();\n\n// firebase.auth().onAuthStateChanged(function(user) {\n//   if (user) {\n//     // User is signed in.\n//   }\n// });\n\nexport function useAuthContext() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState('');\n  const value = {\n    user,\n  };\n\n  useEffect(() => {\n    const unsubscribed = auth.onAuthStateChanged((user) => {\n      console.log(user);\n      setUser(user);\n    });\n    return () => {\n      unsubscribed();\n    };\n  }, []);\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}","import { Route, Redirect } from \"react-router-dom\";\nimport { useAuthContext } from \"../context/AuthContext\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { user } = useAuthContext();\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) => {\n        return user ? <Component {...routeProps} /> : <Redirect to=\"/login\" />;\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;","import { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuthContext } from \"../context/AuthContext\";\n\nconst PublicRoute = ({ component:Component, ...rest }) => {\n  const {user} = useAuthContext();\n  \n  return (\n    <Route \n      {...rest}\n      render = {(routeProps) => {\n        return !user ? <Component {...routeProps} /> : <Redirect to=\"/\" />;\n      }}\n    />\n  );\n};\n\n\nexport default PublicRoute;","import './App.css';\nimport SignUp from './components/SignUp';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport { AuthProvider } from './context/AuthContext';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <div className=\"App\">\n        <BrowserRouter>\n          <PrivateRoute exact path=\"/\" component={Home} />\n          <PublicRoute path=\"/signup\" component={SignUp} />\n          <PublicRoute path=\"/login\" component={Login} />\n        </BrowserRouter>\n      </div>\n    </AuthProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}